created: 20180814011043516
modified: 20180814011044257
tags: 
title: Deep Dive into Abstractions
type: text/vnd.tiddlywiki

The abstraction is the way software engineers building the digital world. We write lines and lines of code, wrap them into functions, classes, modules, packages, images and so on. In the end, you wouldn’t need to touch the bottom layer, but still can finish the job by a simple function call. It’s so powerful that people believe that if there is one problem, then the silver bullet is to add a middle layer to your software.

You might be only familiar with the API that the layer exposes to you. However, making abstractions also means that you’re getting away from the hidden implementations. If there is something wrong from the bottom layers, you would be so confused as you have little knowledge for them. We call this the leaky abstraction. The leaky abstraction forces you to understand things in the bottom layers.

The domain problems for the abstracted layers are different from the one you’re facing on the top layers.  So, to know things being abstracted needs courage. It also takes time. But it’s knowing how and knowing why making engineers different.