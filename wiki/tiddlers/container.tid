created: 20180724103950285
modified: 20180727094114184
title: container
type: text/vnd.tiddlywiki

Container

Many people have heard of the container for a while or even use it every day. However, a question like "what is container" or "how container works" might still rise.

In this post, we will deep dive into the container.

!! Context
!! Solutions
!!! Docker
!!! CoreOS rkt
!!! LXC, LXD
!!! Bocker
!!! OCI
!! Patterns
!!! How it works, Part 1

!!! unshare & container

{{Container and Unshare}}

!!! nsenter & container

{{Container and Nsenter}}

!!! namespace & container

So far, we have shown how to create a new PID namespace and how to enter an existing PID namespace. It's time to figure out what is a namespace.

{{Container and Namespace}}

!!! unionfs & container

{{Container and UnionFS}}

!!! cgroup & container
!!! seccomp & container

!!! process & container

Surprisingly, there is no concept of the container in Kernel space.

A container is merely an OS process. However, don't make it wrong, it's different from the processes you launched from the shell. It runs under a namespace, controlled by a cgroup, and secured by seccomp. 

!! Conclusions

!! References

* [[What even is container|https://jvns.ca/blog/2016/10/10/what-even-is-a-container/]]
* [[Manpage: unshare|http://man7.org/linux/man-pages/man1/unshare.1.html]]
* [[Manpage: nsenter|http://man7.org/linux/man-pages/man1/nsenter.1.html]]
* [[Manpage: namespaces|http://man7.org/linux/man-pages/man7/namespaces.7.html]]
* [[Manpage: cgroup|http://man7.org/linux/man-pages/man7/cgroups.7.html]]
* [[Why do you need to run sshd in container|https://blog.docker.com/2014/06/why-you-dont-need-to-run-sshd-in-docker/]]
* [[Linux namespaces|https://medium.com/@teddyking/linux-namespaces-850489d3ccf]]
