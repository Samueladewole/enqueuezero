_model: topic
---
title: Run a container
---
body:

#### jumbotron-block ####
id: run-a-container
----
title: Run a container
----
lead: Keep building and running containers until we get a cathedral.
----
hint: 
#### text-block ####
text:

### What is a container?

A container is a standard process just like other process you launched from the shell, except that it's being isolated in its [namespace](http://man7.org/linux/man-pages/man7/namespaces.7.html), [cgroups](http://man7.org/linux/man-pages/man7/cgroups.7.html), and [filesystem](https://en.wikipedia.org/wiki/UnionFS). It has everything it needs in its isolation: code, runtime, system tools, system libraries, settings and so on.

### Who needs a container?

Almost everyone.

### Why need a container?

* Container isolates physical resources such as CPU, memory, disk I/O and network from other containers.
* Container isolates OS kernel resources such process id, mount points, user and group IDs from other containers.
* Containers eliminates differences between development and staging environments and help reduce conflicts between teams running different software on the same infrastructure.
----
background: 
----
class: default
#### raw-block ####
contents:

<div style="color: #ffffff; padding: 5% 0 0 20%; height: 200px;background-color:#594446">
<h3>Frequently Asked Questions</h3>
<p>More questions? Ask me by 
<i class="fa fa-github-square"></i>
<a href="https://github.com/soasme/enqueuezero/issues">opening an issue</a>.
</p>
</div>
#### qa-block ####
id: container-vs-visualization
----
q: How is the container different from virtual machine?
----
a: TODO
#### qa-block ####
id: how-container-works
----
q: How does the container work?
----
a: TODO
#### qa-block ####
id: container-communicate-with-outer-world
----
q: How does the container communicate to the outside world?
----
a: TODO
#### qa-block ####
id: container-base-os
----
q: I've defined a base OS in my `Dockerfile` but where does it exist?
----
a: TODO
#### qa-block ####
id: container-vs-image
----
q: Whatâ€™s the difference between image and container?
----
a: TODO
#### qa-block ####
id: container-and-performance
----
q: Does the container slow down the performance of my program?
----
a: TODO
#### raw-block ####
contents:

<div style="color: #ffffff; padding: 5% 0 0 20%; height: 200px;background-color:#0087AB;">
<h3>Best Practise</h3>
<p>Want to contribute? Simply make <i class="fa fa-github-square"></i>
<a href="https://github.com/soasme/enqueuezero" style="color:#e5f3f6;">a pull request</a>.
</p>
</div>
#### qa-block ####
id: keep-image-small
----
q: How to keep the image small?
----
a: TODO
#### qa-block ####
id: container-data-persistence
----
q: How to persist data in the container?
----
a: TODO
#### raw-block ####
contents:

<div style="color: #ffffff; padding: 5% 0 0 20%; height: 200px;background-color:#F9A842;">
<h3>Cheatsheet</h3>
<p>Want to see more similar crafts? Consider <i class="fa fa-credit-card"></i>
<a href="https://www.patreon.com/bePatron?c=1762267" style="color:#e5f3f6;">donate</a> me.
</p>
</div>
#### text-block ####
text:

### Docker Build

```
# Build an image from current directory, setting tag as $username/$reponame:$version
# Don't forget the `.` at last!
$ docker build -t soasme/vanilla:1.0.0 .

# Let's check we have built
$ docker images

# In case the image is not longer needed, you might want to delete it.
$ docker rmi soasme/vanilla:1.0.0
```

### Docker Registry

```
# Pull an image
$ docker pull soasme/tiddlywiki

# Login to remote registry
$ docker login

# Push an image
$ docker push soasme/vanilla:1.0.0
```

### Docker Run

```
# Run a container in interactive mode, with port 8080 exposed, and dir `pwd` attached.
$ docker run -it --rm -p 8080:8080 -v `pwd`:/data soasme/tiddlywiki

# List running instances
$ docker ps

# Attach into the container. Get the hash from `docker ps` command.
$ docker exec -it d252fb6c5d7a /bin/sh

# See latest logs. Get the hash from `docker ps` command.
$ docker logs --tail 100 d252fb6c5d7a

# Stop a container. Get the hash from `docker ps` command.
$ docker kill d252fb6c5d7a
```
----
background: 
----
class: default
